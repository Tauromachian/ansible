- name: Ubuntu Workstation Setup
  hosts: localhost
  become: true
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Upgrade all packages
      apt:
        upgrade: yes

    - name: Install common packages
      apt:
        name:
          - gpick
          - gnome-boxes
          - tmux
          - nala
          - samba
          - curl
          - neofetch
        state: present

    - name: Add Brave browser key
      get_url:
        url: https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
        dest: /usr/share/keyrings/brave-browser-archive-keyring.gpg
        mode: '0644'

    - name: Add Brave browser repository
      apt_repository:
        repo: deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main
        state: present
        filename: brave-browser-release

    - name: Install Brave browser
      apt:
        name: brave-browser
        update_cache: yes
        state: present

    - name: Install Starship prompt
      shell: curl -sS https://starship.rs/install.sh | sh
      args:
        creates: /usr/local/bin/starship

    # Gaming setup
    - name: Add i386 architecture
      command: dpkg --add-architecture i386

    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download WineHQ key
      get_url:
        url: https://dl.winehq.org/wine-builds/winehq.key
        dest: /etc/apt/keyrings/winehq-archive.key

    - name: Download WineHQ sources
      get_url:
        url: https://dl.winehq.org/wine-builds/ubuntu/dists/jammy/winehq-jammy.sources
        dest: /etc/apt/sources.list.d/

    - name: Add Lutris PPA
      apt_repository:
        repo: ppa:lutris-team/lutris
        state: present

    - name: Install Wine and Lutris
      apt:
        name:
          - winehq-stable
          - lutris
        state: present
        install_recommends: yes

    # Flatpak setup
    - name: Install Flatpak
      apt:
        name: flatpak
        state: present

    - name: Add Flathub remote
      flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo

    - name: Install Flatpak applications
      flatpak:
        name: "{{ item }}"
        state: present
        remote: flathub
      loop:
        - org.videolan.VLC
        - com.obsproject.Studio
        - org.shotcut.Shotcut
        - com.calibre_ebook.calibre
        - com.valvesoftware.Steam
        - org.telegram.desktop
        - com.discordapp.Discord

    # Homebrew setup
    - name: Check if Homebrew is installed
      stat:
        path: /home/linuxbrew/.linuxbrew/bin/brew
      register: brew_check

    - name: Install Homebrew
      shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      when: not brew_check.stat.exists

    - name: Install Homebrew packages
      community.general.homebrew:
        name:
          - podman
          - neovim
        state: present

    # Podman images
    - name: Pull Podman images
      containers.podman.podman_image:
        name: "{{ item }}"
      loop:
        - docker.io/library/alpine
        - docker.io/denoland/deno
        - docker.io/library/node:latest
        - docker.io/library/node:20-alpine
        - docker.io/library/node:18.20.4-alpine
        - nginx
        - docker.io/library/postgres
        - docker.io/valkey/valkey
        - php
        - docker.io/library/pgadmin
        - php:8.0-fpm-alpine

    # NVIDIA drivers
    - name: Check for NVIDIA hardware
      shell: lspci | grep -i nvidia
      register: nvidia_check
      ignore_errors: true
      changed_when: false

    - name: Check if NVIDIA drivers are installed
      shell: command -v nvidia-smi
      register: nvidia_driver_check
      ignore_errors: true
      changed_when: false
      when: nvidia_check.rc == 0

    - name: Add graphics drivers PPA
      apt_repository:
        repo: ppa:graphics-drivers/ppa
        state: present
      when: nvidia_check.rc == 0 and nvidia_driver_check.rc != 0

    - name: Install NVIDIA drivers
      command: ubuntu-drivers autoinstall
      when: nvidia_check.rc == 0 and nvidia_driver_check.rc != 0
